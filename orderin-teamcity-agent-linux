FROM jetbrains/teamcity-agent:latest
ENV DEBIAN_FRONTEND noninteractive

# Install AWS CLI
USER root

RUN apt-get update --fix-missing && apt-get -y install apt-utils \ 
                                             python-setuptools \
                                             python3-pip \
                                             tzdata \
                                             wget
RUN pip3 install awscli


# Install GitVersion

RUN mkdir GitVersion
RUN wget https://github.com/GitTools/GitVersion/releases/download/5.1.3/gitversion-linux-5.1.3.tar.gz
RUN tar -xvf gitversion-linux-5.1.3.tar.gz -C GitVersion
RUN rm -rf gitversion-linux-5.1.3.tar.gz
RUN echo "/GitVersion/GitVersion \"\$@\"" >> gitversion
RUN ln -s $(pwd)/gitversion /usr/local/bin/gitversion
RUN chmod 777 $(pwd)/gitversion

# Install Node.js

# RUN apt-get -y install nodejs npm
RUN apt-get install curl -y
RUN curl -sL https://deb.nodesource.com/setup_12.x -o nodesource_setup.sh
RUN bash nodesource_setup.sh
RUN apt-get install nodejs
RUN npm install -g logrocket-cli
# Install Resharper CLI Tools

RUN mkdir ReSharper
RUN wget https://download.jetbrains.com/resharper/ReSharperUltimate.2019.3/JetBrains.ReSharper.CommandLineTools.Unix.2019.3.tar.gz
RUN tar -xvf /JetBrains.ReSharper.CommandLineTools.Unix.2019.3.tar.gz -C ReSharper
RUN rm -rf JetBrains.ReSharper.CommandLineTools.Unix.2019.3.tar.gz
ENV PATH="/ReSharper/:${PATH}"
RUN ln -s /ReSharper/inspectcode.sh /ReSharper/inspectcode
RUN ln -s /ReSharper/dupfinder.sh /ReSharper/dupfinder

# Add microsoft packages to apt list 

RUN wget https://packages.microsoft.com/config/debian/10/packages-microsoft-prod.deb -O packages-microsoft-prod.deb && apt-get install ./packages-microsoft-prod.deb \
&& rm ./packages-microsoft-prod.deb

# Install dotnet 5.0, dotnet 3.1, dotnet 2.1
RUN apt-get update --fix-missing && apt-get install -y dotnet-sdk-5.0 \
                                                       dotnet-sdk-3.1 \
                                                       dotnet-sdk-2.1

#Install dotnet 2.2 depenndency 
RUN wget http://ftp.us.debian.org/debian/pool/main/i/icu/libicu57_57.1-6+deb9u4_amd64.deb  && apt-get install ./libicu57_57.1-6+deb9u4_amd64.deb \
&& rm ./libicu57_57.1-6+deb9u4_amd64.deb

#Install dotnet 2.2
RUN apt-get install -y dotnet-runtime-deps-2.2  \
    dotnet-runtime-2.2 \
     aspnetcore-runtime-2.2 \ 
     dotnet-sdk-2.2 

#Install Kubectl

RUN apt-get install curl -y \
&& curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl \
&& chmod +x ./kubectl \
&& mv ./kubectl /usr/local/bin/kubectl

#Install strong password generator - helps with setting up db users and connection strings

RUN apt-get -y install pwgen

#Install PostgreSQL command line tools

RUN apt-get -y install postgresql

# Install helm and helm-s3 plugin
RUN apt-get -y install openssl
RUN apt-get -y install git
RUN curl -L https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
RUN helm version
RUN helm plugin install https://github.com/hypnoglow/helm-s3.git
RUN helm s3 version --mode

# Clean up
RUN rm -rf /tmp/* \
    && apt-get clean
ENV DEBIAN_FRONTEND teletype

